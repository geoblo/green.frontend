1. 리덕스 관련 라이브러리 (redux-actions 사용)
1) createAction
2) handleActions


2. 리덕스 관련 훅
1) useSelector: 리듀서? 스토어에서 state를 가져올 수 있다.
2) useDispatch: 액션을 디스패치 해준다.

*connect와의 차이점
: connect는 컨테이너 컴포넌트의 부모 컴포넌트가 리렌더링 되어도 컨테이너 컴포넌트의 props가 바뀌지 않는다면 리렌더링이 자동으로 방지되어 성능이 최적화 됨
: useSelector의 경우에는 React.memo 를 useDispatch의 경우에는 useCallback을 같이 써줘야 함


3. 미들웨어
1) 왜 쓰는지?
비동기 작업(axios - api통신) 관리: 로딩중, 로딩이 끝났습니다..., 에러가 발생 등 처리를 위해
즉, 비동기 처리에 대한 것들을 하기 위해서는 미들웨어가 필요

2) 디스패치 ----> 스토어로 가는 중간에 액션을 가로채서 아래와 같은 일들을 할 수 있다.

3) 할 수 있는 일?
- 전달받은 액션을 단순히 콘솔에 기록
- 전달받은 액션을 기반으로 액션을 취소
- 다른 종류의 액션을 추가로 디스패치


4. 비동기 처리를 위한 미들웨어
1) redux-thunk
액션에 객체 대신 함수를 반환한다.


2) redux-saga





@@@ 참고: RTK
http://blog.hwahae.co.kr/all/tech/tech-tech/6946/














