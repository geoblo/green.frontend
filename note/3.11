1. 기본 연산자
+(더하기), -(빼기), *(곱하기), /(나누기), %(나머지)
() 괄호를 사용하여 연산 우선순위 지정

2. 문자 결합 연산자
문자열은 + 로 합칠수 있다.
숫자 데이터도 문자열이랑 합치는 순간 문자열로 변환된다.

3. 대입 연산자
=, +=, -=, *=, /=, %=

4. 대입 연산자 응용
servlet + JSP 쓸때 데이터를 받아서 태그안에 넣어주고 다시 html에 삽입할때 종종 씀

5. 증감 연산자
++, --
앞에 붙으면 전위(연산을 수행하고 대입), 뒤에 붙으면 후위(대입 먼저 하고 연산)

6. 비교 연산자
<, >, <=, >=
==, ===(자료형(타입)까지 비교, 쓰길 추천)
!=, !==(자료형(타입)까지 비교, 쓰길 추천)

7. 논리 연산자
!(not): boolean 값 부정
||(or): 하나라도 true가 있으면 true
&&(and): 하나라도 false가 있으면 false
*중요: 식의 결과값이 이미 결정된 경우 미리 멈추는 것을 '숏서킷 연산(Short-circuit evaluation)'이라고 함

8. 삼항 연산자
조건식 ? true일때 리턴값 : false일때 리턴값;

9. 연산자 우선순위 : 암기하지 않아도 쓰다보면 자연스럽게 ~
1) ()
2) 단항 연산자(++, --, !)
3) 산술 연산자(+, -, *, /, %)
4) 비교 연산자(<, >, ...)
: 문자열을 숫자와 비교할 때 JavaScript는 비교할 때 문자열을 숫자로 변환합니다.
빈 문자열은 0으로 변환됩니다.
비교에서 숫자가 아닌 문자열은 NaN으로 변환되고 항상 false이다.
5) 논리 연산자(&&, ||)
6) 대입 연산자(=)

10. prompt(text, defaultText)
브라우저 제공
리턴값: 무조건 string으로 리턴됨
If the user clicks "OK", the input value is returned.
Otherwise(clicks "cancel") null is returned.

11. (참고) 네이밍 가이드
1) 카멜 케이스(변수명, 함수명) - 낙타
userList, newTodoList

2) 파스칼 케이스(클래스명, 객체명)
UserList, NewTodoList

3) 스네이크 케이스(파일명)
user_list, new_todo_list

4) 케밥 표기법(css)
user-list, new-todo-list

5) 헝가리안 표기법(jquery - js를 쉽게 사용하려고 나온 파생된 라이브러리)
$userList, $newTodoList

12. 컴포넌트 약어

13. 네이밍 기본 규칙
1)
2) 외형 > 의미 > 순서 > 상태

14. CSS 방법론 중에 한가지 -> BEM
아래 네 가지만 기억!
1) "id"는 사용하지 X, class를 사용
2) menu
3) menu__list : 언더바 두개(하위계층을 의미)
4) button--color-black : 대쉬 두개(외형이나 상태)

.menu .list {} 
=> .menu__list {} 가독성 좋고 선택자가 길어지지도 않음

15. CSS 전처리기: SASS & SCSS

16. .svg: 벡터 이미지(장점: 확대를 해도 깨지지 않는다.)

17. css 파일 나누기
보통 여러 페이지를 이동해도 header와 footer는 공통
common.css : header와 footer에 관련된 공통 css
main.css : header와 footer 사이 main content에 관련된 css

18. /* fixed 사용시 width 값을 100%로 줘야한다. */

19. calc() CSS 함수




