1. axios
fetch VS ajax VS axios
axios를 쓰는것이 안정성이 높으므로 추천한다?

Axios란?
Axios는 node.js와 브라우저를 위한 Promise 기반 HTTP 클라이언트 입니다. 그것은 동형 입니다(동일한 코드베이스로 브라우저와 node.js에서 실행할 수 있습니다). 서버 사이드에서는 네이티브 node.js의 http 모듈을 사용하고, 클라이언트(브라우저)에서는 XMLHttpRequests를 사용합니다.

특징
브라우저를 위해 XMLHttpRequests 생성
node.js를 위해 http 요청 생성
Promise API를 지원
요청 및 응답 인터셉트
요청 및 응답 데이터 변환
요청 취소
JSON 데이터 자동 변환
XSRF를 막기위한 클라이언트 사이드 지원


2. target="_blank" rel="noreferrer"
보안상의 이유로 한 쌍으로 넣어야 하는?


3. react-query lib 소개


4. https://newsapi.org/ 사용


5. Redux
dispatch: action을 보낸다.
store: reducer를 품고 있다.

https://redux.js.org/tutorials/essentials/part-1-overview-concepts


5. 컴포넌트의 분리
1) 프레젠테이셔널 컴포넌트: ui만 담당
2) 컨테이너 컴포넌트: 리덕스와 소통








궁금증
1) 컴포넌트 밖에 선언한 변수들은 렌더링에 상관없는데 useRef 변수와의 차이점?
2) set함수를 자식에 내려보내서 set 하는것과 
부모에서 set를 갖고 조작하는 함수 자체를 만들어서 자식한테 내려보내 쓰는것이랑 차이점?
3) 렌더링 전에 서버에서 데이터를 가져오는 방법?
4) react-query를 쓰면 리덕스가 없어도 될지?










